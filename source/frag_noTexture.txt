#version 300 es
precision mediump float;

uniform mat4 model;
uniform vec3 cameraPosition;

// material settings
//uniform float materialShininess;
//uniform vec3 materialSpecularColor;

#define MAX_LIGHTS 10
uniform int numLights;

in vec3 fragNormal;
in vec3 fragVert;

out vec4 finalColor;

void main(void) {
	// Constants
	vec3 normal = normalize(transpose(inverse(mat3(model))) * fragNormal);
	vec3 surfacePos = vec3(model * vec4(fragVert, 1));
	vec4 surfaceColor = vec4(0.8, 0.8, 0.8, 1);
	vec3 surfaceToCamera = normalize(cameraPosition - surfacePos);

	vec3 linearColor = vec3(0, 0, 0);
    
    //final color (after gamma correction)
    vec3 gamma = vec3(1.0/2.2);
    finalColor = vec4(pow(linearColor, gamma), surfaceColor.a);
}